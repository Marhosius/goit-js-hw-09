{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAWC,SAASC,cAAc,SACxCF,EAASG,SAASC,MAAMC,aAAa,OAAQ,OAC7CL,EAASG,SAASC,MAAMC,aAAa,MAAO,KAC5CL,EAASG,SAASG,KAAKD,aAAa,OAAQ,OAC5CL,EAASG,SAASG,KAAKD,aAAa,MAAO,KAC3CL,EAASG,SAASI,OAAOF,aAAa,MAAO,KAE7CL,EAASQ,iBAAiB,UAE1B,SAAsBC,G,kBAQlB,IAAIC,OAAA,EAEFA,EADQ,IAANC,EACSC,EAEAA,GAAcC,EAG3BC,YAAW,WAYf,IAAuBC,EAAUX,EACzBY,GADeD,IAXAJ,EAWUP,EAXNM,EAYnBM,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CACNL,WACAX,UAGFiB,EAAO,CACLN,WACAX,S,KAtB6BkB,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUX,EAAKmB,EAALnB,MAC/CoB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANvB,EAAM,M,IACrEwB,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAUX,EAAKmB,EAALnB,MACpBoB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANvB,EAAM,M,MAEpEM,E,EApBLD,EAAGqB,iBAMH,IALA,IAAIlB,EAAamB,OAAOtB,EAAGuB,OAAO7B,SAASC,MAAM6B,OAC7CpB,EAAYkB,OAAOtB,EAAGuB,OAAO7B,SAASG,KAAK2B,OAC3CC,EAAaH,OAAOtB,EAAGuB,OAAO7B,SAASI,OAAO0B,OAGzCE,EAAI,EAAGA,GAAKD,EAAYC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst formData = document.querySelector('.form');\nformData.elements.delay.setAttribute(\"step\", \"100\");\nformData.elements.delay.setAttribute(\"min\", \"0\");\nformData.elements.step.setAttribute(\"step\", \"100\");\nformData.elements.step.setAttribute(\"min\", \"0\");\nformData.elements.amount.setAttribute(\"min\", \"0\");\n\nformData.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(el) {\n  el.preventDefault();\n  let firstDelay = Number(el.target.elements.delay.value);\n  let delayStep = Number(el.target.elements.step.value);\n  let amountInfo = Number(el.target.elements.amount.value);\n\n\n  for (let i = 0; i <= amountInfo; i += 1) {\n    let delaySum;\n    if (i === 0) {\n      delaySum = firstDelay;\n    } else {\n      delaySum = firstDelay += delayStep;\n    }\n\n    setTimeout(() => {\n      createPromise((++i), delaySum).then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }).catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }, delaySum);\n\n  };\n\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({\n        position,\n        delay\n      });\n    } else {\n      reject({\n        position,\n        delay\n      });\n    }\n  })\n};\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formData","document","querySelector","elements","delay","setAttribute","step","amount","addEventListener","el","delaySum","i","firstDelay","delayStep","setTimeout","position","shouldResolve","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","Number","target","value","amountInfo","i1","_loop"],"version":3,"file":"03-promises.c4bd11a1.js.map"}