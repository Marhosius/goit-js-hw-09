{"mappings":"iiBAAA,IASIA,EATJC,EAAAC,EAAA,SAGMC,EAAWC,SAASC,cAAc,SAsCxC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CACNN,WACAC,UAGFM,EAAO,CACLP,WACAC,S,MAILR,E,CArDLG,EAASa,SAASR,MAAMS,aAAa,OAAQ,OAC7Cd,EAASa,SAASR,MAAMS,aAAa,MAAO,KAC5Cd,EAASa,SAASE,KAAKD,aAAa,OAAQ,OAC5Cd,EAASa,SAASE,KAAKD,aAAa,MAAO,KAC3Cd,EAASa,SAASG,OAAOF,aAAa,MAAO,KAG7Cd,EAASiB,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAGC,iBAMH,IALA,IAAIC,EAAaC,OAAOH,EAAGI,OAAOT,SAASR,MAAMkB,OAC7CC,EAAYH,OAAOH,EAAGI,OAAOT,SAASE,KAAKQ,OAC3CE,EAAaJ,OAAOH,EAAGI,OAAOT,SAASG,OAAOO,OAGzCG,EAAI,EAAGA,GAAKD,EAAYC,GAAK,EAElC7B,EADQ,IAAN6B,EACSN,EAEAA,GAAcI,EAI3BrB,IAAiBuB,EAAI7B,GAAU8B,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAC/CwB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IACrE4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACpBwB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAMvEa,EAAGiB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst formData = document.querySelector('.form');\nformData.elements.delay.setAttribute(\"step\", \"100\");\nformData.elements.delay.setAttribute(\"min\", \"0\");\nformData.elements.step.setAttribute(\"step\", \"100\");\nformData.elements.step.setAttribute(\"min\", \"0\");\nformData.elements.amount.setAttribute(\"min\", \"0\");\nlet delaySum;\n\nformData.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(el) {\n  el.preventDefault();\n  let firstDelay = Number(el.target.elements.delay.value);\n  let delayStep = Number(el.target.elements.step.value);\n  let amountInfo = Number(el.target.elements.amount.value);\n\n\n  for (let i = 0; i <= amountInfo; i += 1) {\n    if (i === 0) {\n      delaySum = firstDelay;\n    } else {\n      delaySum = firstDelay += delayStep;\n    }\n\n\n    createPromise((++i), delaySum).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n\n  };\n\n  el.currentTarget.reset();\n\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay\n        });\n      } else {\n        reject({\n          position,\n          delay\n        });\n      }\n    })\n  }, delaySum);\n};\n\n\n"],"names":["$ce04d3a99e08e73b$var$delaySum","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formData","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","elements","setAttribute","step","amount","addEventListener","el","preventDefault","firstDelay","Number","target","value","delayStep","amountInfo","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.3f0df679.js.map"}