{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAWC,SAASC,cAAc,SAoCxC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SACNN,E,MACAC,IAGFM,EAAO,C,SACLP,E,MACAC,GACA,G,CA/CRL,EAASY,SAASP,MAAMQ,aAAa,OAAQ,OAC7Cb,EAASY,SAASP,MAAMQ,aAAa,MAAO,KAC5Cb,EAASY,SAASE,KAAKD,aAAa,OAAQ,OAC5Cb,EAASY,SAASE,KAAKD,aAAa,MAAO,KAC3Cb,EAASY,SAASG,OAAOF,aAAa,MAAO,KAE7Cb,EAASgB,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAGC,iBACH,IAAIC,EAAaC,OAAOH,EAAGI,OAAOT,SAASP,MAAMiB,OAC7CC,EAAYH,OAAOH,EAAGI,OAAOT,SAASE,KAAKQ,OAC3CE,EAAaJ,OAAOH,EAAGI,OAAOT,SAASG,OAAOO,OAGlD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAYC,GAAK,EAAG,CACvC,IAAIC,EAEFA,EADQ,IAAND,EACSN,EAEAA,GAAcI,EAG3BI,YAAW,KACTxB,IAAiBsB,EAAIC,GAAUE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MAC/CwB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IACvE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MACpBwB,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,GACrE,GACDqB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst formData = document.querySelector('.form');\nformData.elements.delay.setAttribute(\"step\", \"100\");\nformData.elements.delay.setAttribute(\"min\", \"0\");\nformData.elements.step.setAttribute(\"step\", \"100\");\nformData.elements.step.setAttribute(\"min\", \"0\");\nformData.elements.amount.setAttribute(\"min\", \"0\");\n\nformData.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(el) {\n  el.preventDefault();\n  let firstDelay = Number(el.target.elements.delay.value);\n  let delayStep = Number(el.target.elements.step.value);\n  let amountInfo = Number(el.target.elements.amount.value);\n\n\n  for (let i = 0; i <= amountInfo; i += 1) {\n    let delaySum;\n    if (i === 0) {\n      delaySum = firstDelay;\n    } else {\n      delaySum = firstDelay += delayStep;\n    }\n\n    setTimeout(() => {\n      createPromise((++i), delaySum).then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }).catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }, delaySum);\n\n  };\n\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({\n        position,\n        delay\n      });\n    } else {\n      reject({\n        position,\n        delay\n      });\n    }\n  })\n};\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formData","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","elements","setAttribute","step","amount","addEventListener","el","preventDefault","firstDelay","Number","target","value","delayStep","amountInfo","i","delaySum","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.a0dbc1ea.js.map"}