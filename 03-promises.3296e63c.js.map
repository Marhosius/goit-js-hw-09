{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAWC,SAASC,cAAc,SAMxC,IAAIC,EAgCJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SACNN,E,MACAC,IAGFM,EAAO,C,SACLP,E,MACAC,GACA,GAEJ,GACDH,E,CArDLH,EAASc,SAASR,MAAMS,aAAa,OAAQ,OAC7Cf,EAASc,SAASR,MAAMS,aAAa,MAAO,KAC5Cf,EAASc,SAASE,KAAKD,aAAa,OAAQ,OAC5Cf,EAASc,SAASE,KAAKD,aAAa,MAAO,KAC3Cf,EAASc,SAASG,OAAOF,aAAa,MAAO,KAG7Cf,EAASkB,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAGC,iBACH,IAAIC,EAAaC,OAAOH,EAAGI,OAAOT,SAASR,MAAMkB,OAC7CC,EAAYH,OAAOH,EAAGI,OAAOT,SAASE,KAAKQ,OAC3CE,EAAaJ,OAAOH,EAAGI,OAAOT,SAASG,OAAOO,OAGlD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAYC,GAAK,EAElCxB,EADQ,IAANwB,EACSN,EAEAA,GAAcI,EAI3BrB,IAAiBuB,EAAIxB,GAAUyB,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAC/CuB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IACvE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MACpBuB,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAMzEa,EAAGe,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst formData = document.querySelector('.form');\nformData.elements.delay.setAttribute(\"step\", \"100\");\nformData.elements.delay.setAttribute(\"min\", \"0\");\nformData.elements.step.setAttribute(\"step\", \"100\");\nformData.elements.step.setAttribute(\"min\", \"0\");\nformData.elements.amount.setAttribute(\"min\", \"0\");\nlet delaySum;\n\nformData.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(el) {\n  el.preventDefault();\n  let firstDelay = Number(el.target.elements.delay.value);\n  let delayStep = Number(el.target.elements.step.value);\n  let amountInfo = Number(el.target.elements.amount.value);\n\n\n  for (let i = 0; i <= amountInfo; i += 1) {\n    if (i === 0) {\n      delaySum = firstDelay;\n    } else {\n      delaySum = firstDelay += delayStep;\n    }\n\n\n    createPromise((++i), delaySum).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n\n  };\n\n  el.currentTarget.reset();\n\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay\n        });\n      } else {\n        reject({\n          position,\n          delay\n        });\n      }\n    })\n  }, delaySum);\n};\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formData","document","querySelector","$47d4ff9957288465$var$delaySum","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","elements","setAttribute","step","amount","addEventListener","el","preventDefault","firstDelay","Number","target","value","delayStep","amountInfo","i","then","$parcel$interopDefault","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.3296e63c.js.map"}